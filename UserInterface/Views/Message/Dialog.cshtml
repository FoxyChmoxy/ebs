@model UserInterface.ViewModels.DialogViewModel
@{
    ViewData["Title"] = "Dialog";
}
<style>
    #messages {
        overflow-y: scroll;
        width: 100%;
        height: 60vh;
    }

    .myMessage {
        width: 100%;
        background: #EFFFDE;
        border-radius: 15px;
        padding: 5px;
        color: black;
        margin-bottom: 20px;
        padding-top: 10px;
    }

    .friendMessage {
        width: 100%;
        background: #FFFFFF;
        border-radius: 15px;
        padding: 5px;
        color: black;
        margin-bottom: 20px;
        padding-top: 10px;
    }

    .ebs-image {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        overflow: hidden;
        margin: 0 auto
    }

        .ebs-image img {
            width: 100%
        }
</style>
<section style="padding-top:50px">
    <div class="container pt-5">
        <div class="row">
            <div class="col-md-12">
                <div style="background:#D8DFE7">
                    <div class="bg-secondary pl-3 pt-3 pb-3 pt-3 text-light">
                        <a asp-controller="Message" asp-action="Index" class="btn btn-primary mr-3">Back</a>
                        <span>@ViewBag.Receiver.Email</span>
                    </div>
                    <div id="messages" class="pl-3 pr-3 pt-4 pb-2">
                        @foreach (var message in Model.Messages)
                        {
                            if (message.UserSenderEmail == User.Identity.Name)
                            {
                                var image = ViewBag.Me.ImageSource == null ? "no-user.png" : ViewBag.Receiver;
                                <div class="myMessage">
                                    <div class="row mb-1">
                                        <div class="col-md-1">
                                            <div class="ebs-image">
                                                <img src="~/img/@ViewBag.Me.ImageSource" />
                                            </div>
                                        </div>
                                        <div class="col-md-11 pt-1 text-left">
                                            <p>@message.Text</p>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                var image = ViewBag.Receiver.ImageSource == null ? "no-user.png" : ViewBag.Receiver;
                                <div class="friendMessage">
                                    <div class="row mb-1">
                                        <div class="col-md-1">
                                            <div class="ebs-image">
                                                <img src="~/img/@image" />
                                            </div>
                                        </div>
                                        <div class="col-md-11 pt-1 text-left">
                                            <p>@message.Text</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="input-group mb-3">
                    <input style="padding:25px !important;padding-left:15px !important" type="text" class="form-control" placeholder="Write a message..." id="messageText">
                    <div class="input-group-append">
                        <button class="btn btn-primary pl-4 pr-4" id="sendMessage"><i class="fa fa-send"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function () {

            var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

            document.getElementById("sendMessage").disabled = true;

            connection.on("ReceiveMessage", function (user, message) {
                var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
                var encodedMsg = user + " says " + msg;
                var li = document.createElement("p");
                li.textContent = encodedMsg;
                document.getElementById("messages").appendChild(li);
            });

            connection.start().then(function () {
                document.getElementById("sendMessage").disabled = false;
            }).catch(function (err) {
                return console.error(err.toString());
            });

            document.getElementById("sendMessage").addEventListener("click", function (event) {
                var user = document.getElementById("userInput").value;
                var message = document.getElementById("messageInput").value;
                connection.invoke("SendMessage", user, message).catch(function (err) {
                    return console.error(err.toString());
                });
                event.preventDefault();
            });

            $("#sendMessage").click(function () {
                var message = $("#messageText").val().trim();
                if (message != "") {
                    toastr.success(message, "success");
                }
            });
        });
    </script>
}